
// Generated by generate_java_code.groovy on Thu Feb 06 02:24:20 PST 2014

package org.ifcx.ifcp;

public class CodeFactory {
    static final int ORTHOGRAPHY_VALUE_LIMIT = 32;

    static Code[] conditional_move = {
        
        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r0 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r1 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r2 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r3 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r4 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r5 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r6 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r0 != 0) um.r7 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r1 != 0) um.r7 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r2 != 0) um.r7 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r3 != 0) um.r7 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r4 != 0) um.r7 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r5 != 0) um.r7 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r6 != 0) um.r7 = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { if (um.r7 != 0) um.r7 = um.r7; }
        }
    };
    static Code[] array_index = {
        
        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.arrays.get(um.r7)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.arrays.get(um.r7)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.arrays.get(um.r7)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.arrays.get(um.r7)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.arrays.get(um.r7)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.arrays.get(um.r7)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.arrays.get(um.r7)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r0)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r1)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r2)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r3)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r4)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r5)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r6)[um.r7]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r0]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r1]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r2]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r3]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r4]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r5]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r6]; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.arrays.get(um.r7)[um.r7]; }
        }
    };
    static Code[] array_amend = {
        
        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r0)[um.r7] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r1)[um.r7] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r2)[um.r7] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r3)[um.r7] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r4)[um.r7] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r5)[um.r7] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r6)[um.r7] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r0] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r1] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r2] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r3] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r4] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r5] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r6] = um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.arrays.get(um.r7)[um.r7] = um.r7; }
        }
    };
    static Code[] addition = {
        
        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.r7 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.r7 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.r7 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.r7 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.r7 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.r7 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.r7 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r0 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r1 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r2 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r3 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r4 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r5 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r6 + um.r7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.r7 + um.r7; }
        }
    };
    static Code[] multiplication = {
        
        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) * (((long) um.r7) & 0xFFFFFFFFL)); }
        }
    };
    static Code[] division = {
        
        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r0) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r1) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r2) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r3) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r4) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r5) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r6) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r0) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r1) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r2) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r3) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r4) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r5) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r6) & 0xFFFFFFFFL)); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = (int) ((((long) um.r7) & 0xFFFFFFFFL) / (((long) um.r7) & 0xFFFFFFFFL)); }
        }
    };
    static Code[] not_and = {
        
        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = ~(um.r7 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = ~(um.r7 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = ~(um.r7 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = ~(um.r7 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = ~(um.r7 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = ~(um.r7 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = ~(um.r7 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r0 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r1 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r2 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r3 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r4 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r5 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r6 & um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = ~(um.r7 & um.r7); }
        }
    };

    static Code[] allocation = {
        
        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.allocate(um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.allocate(um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.allocate(um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.allocate(um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.allocate(um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.allocate(um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.allocate(um.r7); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.allocate(um.r7); }
        }
    };
    static Code[] abandonment = {
        
        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.deallocate(um.r7); }
        }
    };

    static Code[] output = {
        
        new Code() {
            @Override
            void execute(UM um) { um.output(um.r0); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.output(um.r1); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.output(um.r2); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.output(um.r3); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.output(um.r4); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.output(um.r5); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.output(um.r6); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.output(um.r7); }
        }
    };
    static Code[] input = {
        
        new Code() {
            @Override
            void execute(UM um) { um.r0 = um.input(); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = um.input(); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = um.input(); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = um.input(); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = um.input(); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = um.input(); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = um.input(); }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = um.input(); }
        }
    };

    static Code[] load = {
        
        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r0); um.ip = um.r7;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r1); um.ip = um.r7;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r2); um.ip = um.r7;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r3); um.ip = um.r7;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r4); um.ip = um.r7;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r5); um.ip = um.r7;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r6); um.ip = um.r7;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r0;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r1;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r2;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r3;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r4;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r5;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r6;  }
        },

        new Code() {
            @Override
            void execute(UM um) { um.load(um.r7); um.ip = um.r7;  }
        }
    };

    static Code halt = new Code() {
        @Override
        void execute(UM um) { um.halt(); }
    };

    static Code illegal = new Code() {
        @Override
        void execute(UM um) { um.illegal(); }
    };

    static Code[][] orthography = {
        { 
        new Code() {
            @Override
            void execute(UM um) { um.r0 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r0 = 31; }
        }},
{
        new Code() {
            @Override
            void execute(UM um) { um.r1 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r1 = 31; }
        }},
{
        new Code() {
            @Override
            void execute(UM um) { um.r2 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r2 = 31; }
        }},
{
        new Code() {
            @Override
            void execute(UM um) { um.r3 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r3 = 31; }
        }},
{
        new Code() {
            @Override
            void execute(UM um) { um.r4 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r4 = 31; }
        }},
{
        new Code() {
            @Override
            void execute(UM um) { um.r5 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r5 = 31; }
        }},
{
        new Code() {
            @Override
            void execute(UM um) { um.r6 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r6 = 31; }
        }},
{
        new Code() {
            @Override
            void execute(UM um) { um.r7 = 0; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 1; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 2; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 3; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 4; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 5; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 6; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 7; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 8; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 9; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 10; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 11; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 12; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 13; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 14; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 15; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 16; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 17; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 18; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 19; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 20; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 21; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 22; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 23; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 24; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 25; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 26; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 27; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 28; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 29; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 30; }
        },

        new Code() {
            @Override
            void execute(UM um) { um.r7 = 31; }
        } }
    };

    public static Code forOp(int op) {
        switch (op >>> 28) {
            case 0 : // Conditional Move
                return conditional_move[op & 511];
            case 1 : // Array Index
                return array_index[op & 511];
            case 2 : // Array Amend
                return array_amend[op & 511];
            case 3 : // Addition
                return addition[op & 511];
            case 4 : // Multiplication
                return multiplication[op & 511];
            case 5 : // Division
                return division[op & 511];
            case 6 : // Not-And
                return not_and[op & 511];
            case 7 : // Halt
                return halt;
            case 8 : // Allocation
                return allocation[op & 63];
            case 9 : // Abandonment
                return abandonment[op & 7];
            case 10 : // Output
                return output[op & 7];
            case 11 : // Input
                return input[op & 7];
            case 12 : // Load Program
                return load[op & 63];
            case 13 : // Orthography
                final int v = op & 0x1FFFFFF;
                final int a = (op >> 25) & 7;
                if (v < ORTHOGRAPHY_VALUE_LIMIT) {
                    return orthography[a][v];
                }
                return new Code() {
                    @Override
                    void execute(UM um) { um.setRegister(a, v); }
                };
            default:
                return illegal;
        }
    }
}
